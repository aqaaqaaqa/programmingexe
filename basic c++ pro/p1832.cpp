//
// Created by 10154 on 2023/6/28.
//

#include "iostream"
#include "algorithm"

using namespace std;

const int N = 1100;

int sushu[170] = {0, 2 , 3 , 5 , 7 , 11 , 13 , 17 , 19 , 23 , 29 , 31 , 37 , 41 , 43 , 47 , 53 , 59 , 61 , 67 , 71 , 73 , 79 , 83 , 89 , 97 , 101 , 103 , 107 , 109 , 113 , 127 , 131 , 137 , 139 , 149 , 151 , 157 , 163 , 167 , 173 , 179 , 181 , 191 , 193 , 197 , 199 , 211 , 223 , 227 , 229 , 233 , 239 , 241 , 251 , 257 , 263 , 269 , 271 , 277 , 281 , 283 , 293 , 307 , 311 , 313 , 317 , 331 , 337 , 347 , 349 , 353 , 359 , 367 , 373 , 379 , 383 , 389 , 397 , 401 , 409 , 419 , 421 , 431 , 433 , 439 , 443 , 449 , 457 , 461 , 463 , 467 , 479 , 487 , 491 , 499 , 503 , 509 , 521 , 523 , 541 , 547 , 557 , 563 , 569 , 571 , 577 , 587 , 593 , 599 , 601 , 607 , 613 , 617 , 619 , 631 , 641 , 643 , 647 , 653 , 659 , 661 , 673 , 677 , 683 , 691 , 701 , 709 , 719 , 727 , 733 , 739 , 743 , 751 , 757 , 761 , 769 , 773 , 787 , 797 , 809 , 811 , 821 , 823 , 827 , 829 , 839 , 853 , 857 , 859 , 863 , 877 , 881 , 883 , 887 , 907 , 911 , 919 , 929 , 937 , 941 , 947 , 953 , 967 , 971 , 977 , 983 , 991 , 997, 1009};
unsigned long long dp[N][N];
int n;

int main(){
    cin >> n;

    for (int k = 0; k < N; k++){
        dp[k][0] = 1;
    }
    for(int i = 1; i < 170; i++){
        for(int j = 1; j <= n; j++){
            dp[i][j] += dp[i - 1][j];
            //for(int k = 0; k * sushu[i] <= j; k++){
            if(j - sushu[i] >= 0) dp[i][j] += dp[i][j - sushu[i]];
            //}
        }
    }

    int sum = 0;

    for(int i = 0; i < 170; i++) {
        if (n >= sushu[i]) sum++;
        else break;
    }

    cout << dp[sum - 1][n];

}